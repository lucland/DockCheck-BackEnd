const swaggerJsDoc = require('swagger-jsdoc');

const swaggerOptions = {
  swaggerDefinition: {
    openapi: '3.0.0',
    info: {
      title: 'DockCheck API',
      description: 'DockCheck API Information',
      contact: {
        name: 'Developer',
      },
      servers: [
        {
          url: `http://dockcheckapi.sa-east-1.elasticbeanstalk.com`,
        },
      ],
      version: '1.0.0',
    },
    components: {
        schemas: {
          Area: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the area' },
              count: { type: 'integer',
            description: 'The number of users in the area' },
              name: { type: 'string',
            description: 'The name of the area' },
              is_portal: { type: 'boolean',
            description: 'The area is a portal' },
              status: { type: 'string',
            description: 'The status of the area' },
            },
          },
          Authorization: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the authorization' },
              third_project_id: { type: 'string',
            description: 'The unique identifier of the third project' },
              expiration_date: { type: 'string', format: 'date-time',
            description: 'The expiration date of the authorization' },
              status: { type: 'string',
            description: 'The status of the authorization'},
            },
          }, 
          Beacon: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the beacon' },
              itag: { type: 'string',
            description: 'The itag of the beacon' },
              is_valid: { type: 'boolean',
            description: 'The beacon is valid' },
              employee_id: { type: 'string',
            description: 'The unique identifier of the employee' },
              status: { type: 'string',
            description: 'The status of the beacon' },
            },
          },
          Company: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the company' },
              name: { type: 'string',
            description: 'The name of the company' },
              logo: { type: 'string',
            description: 'The logo of the company' },
              crew_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the crew' },
              projects_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the projects' },
              admins_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the admins' },
              razao_social: { type: 'string',
            description: 'The razao social of the company' },
              cnpj: { type: 'string',
            description: 'The cnpj of the company' },
              address: { type: 'string',
            description: 'The address of the company' },
              telephone: { type: 'string',
            description: 'The telephone of the company' },
              email: { type: 'string',
            description: 'The email of the company' },
              status: { type: 'string',
            description: 'The status of the company' },
            },
          },
          Document: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the document' },
              type: { type: 'string',
            description: 'The type of the document' },
              expiration_date: { type: 'string', format: 'date-time',
            description: 'The expiration date of the document' },
              path: { type: 'string',
            description: 'The path of the document' },
              employee_id: { type: 'string',
            description: 'The unique identifier of the employee' },
              status: { type: 'string',
            description: 'The status of the document' },
            },
          },
          Employee: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the employee' },
              name: { type: 'string',
            description: 'The name of the employee' },
              authorizations_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the authorizations' },
              third_company_id: { type: 'string',
            description: 'The unique identifier of the third company' },
              visitor_company: { type: 'string',
            description: 'The visitor company of the employee' },
              role: { type: 'string',
            description: 'The role of the employee' },
              project: { type: 'string',
            description: 'The project of the employee' },
              number: { type: 'integer',
            description: 'The number of the employee' },
              blood_type: { type: 'string',
            description: 'The blood type of the employee' },
              cpf: { type: 'string',
            description: 'The cpf of the employee' },
              email: { type: 'string',
            description: 'The email of the employee'},
              area: { type: 'string',
            description: 'The area of the employee' },
              last_area_found: { type: 'string',
            description: 'The last area found of the employee' },
              last_time_found: { type: 'string', format: 'date-time',
            description: 'The last time found of the employee' },
              is_blocked: { type: 'boolean',
            description: 'The employee is blocked' },
              block_reason: { type: 'string',
            description: 'The block reason of the employee' },
              status: { type: 'string',
            description: 'The status of the employee' },
            },
          },
          Event: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the event' },
              employee_id: { type: 'string',
            description: 'The unique identifier of the employee' },
              project_id: { type: 'string',
            description: 'The unique identifier of the project' },
              action: { type: 'string' },
              sensor_id: { type: 'string',
            description: 'The unique identifier of the sensor' },
              beacon_id: { type: 'string',
            description: 'The unique identifier of the beacon' },
              timestamp: { type: 'string', format: 'date-time',
            description: 'The timestamp of the event' },
              status: { type: 'string',
            description: 'The status of the event' },
            },
          },
          Login: {
            type: 'object',
            properties: {
              user_id: { type: 'string',
            description: 'The unique identifier of the user' },
            timestamp: { type: 'string', format: 'date-time',
            description: 'The timestamp of the login' },
            expiration: { type: 'string', format: 'date-time',
            description: 'The expiration of the login' },
            system: { type: 'string',
            description: 'The system of the login' },
            created_at: { type: 'string', format: 'date-time',
            description: 'The created at of the login' },
            updated_at: { type: 'string', format: 'date-time',
            description: 'The updated at of the login' },
            status: { type: 'string',
            description: 'The status of the login' },
            },
          },
          Picture: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the picture' },
              employee_id: { type: 'string',
            description: 'The unique identifier of the employee' },
              base_64: { type: 'text',
            description: 'The base 64 of the picture' },
              doc_path: { type: 'string',
            description: 'The path of the picture' },
              status: { type: 'string',
            description: 'The status of the picture' },
            },
          },
          Project: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the project' },
              name: { type: 'string',
            description: 'The name of the project' },
              date_start: { type: 'string', format: 'date-time',
            description: 'The start date of the project' },
              date_end: { type: 'string', format: 'date-time',
            description: 'The end date of the project' },
              vessel_id: { type: 'string',
            description: 'The unique identifier of the vessel' },
              third_companies_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the third companies' },
              admins_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the admins' },
              areas_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the areas' },
            company_id: { type: 'string',
            description: 'The unique identifier of the company' },
              is_docking: { type: 'boolean',
            description: 'The project is docking' },
              status: { type: 'string',
            description: 'The status of the project' },
            },
          },
          Sensor: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the sensor' },
              area_id: { type: 'string',
            description: 'The unique identifier of the area' },
              beacons_found: { type: 'array', items: { type: 'string' },
            description: 'The beacons found of the sensor' },
              code: { type: 'string',
            description: 'The code of the sensor' },
              location_x: { type: 'integer',
            description: 'The location x of the sensor' },
              location_y: { type: 'integer',
            description: 'The location y of the sensor' },
              status: { type: 'string',
            description: 'The status of the sensor' },
            },
          },
          ThirdCompany: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the third company' },
              name: { type: 'string',
            description: 'The name of the third company' },
              logo: { type: 'string',
            description: 'The logo of the third company' },
              admins_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the admins' },
              razao_social: { type: 'string',
            description: 'The razao social of the third company' },
              cnpj: { type: 'string',
            description: 'The cnpj of the third company' },
              address: { type: 'string',
            description: 'The address of the third company' },
              is_vessel_company: { type: 'boolean',
            description: 'The third company is a vessel company' },
              telephone: { type: 'string',
            description: 'The telephone of the third company' },
              email: { type: 'string',
            description: 'The email of the third company' },
              status: { type: 'string',
            description: 'The status of the third company' },
            },
          },
          ThirdProject: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the third project' },
              third_company_id: { type: 'string',
            description: 'The unique identifier of the third company' },
              name: { type: 'string',
            description: 'The name of the third project' },
              date_start: { type: 'string', format: 'date-time',
            description: 'The start date of the third project' },
              date_end: { type: 'string', format: 'date-time',
            description: 'The end date of the third project' },
              project_id: { type: 'string' },
              allowed_areas_id: { type: 'array', items: { type: 'string' },
            description: 'The allowed areas of the third project' },
              employees_id: { type: 'array', items: { type: 'string' },
            description: 'The employees of the third project' },
              is_docking: { type: 'boolean',
            description: 'The third project is docking' },
              status: { type: 'string',
            description: 'The status of the third project'},
            },
          },
          User: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the user' },
              name: { type: 'string',
            description: 'The name of the user'},
              email: { type: 'string',
            description: 'The email of the user'},
              company_id: { type: 'string',
            description: 'The unique identifier of the company'},
              role: { type: 'string',
            description: 'The role of the user'},
              number: { type: 'integer',
            description: 'The number of the user'},
              blood_type: { type: 'string',
            description: 'The blood type of the user'},
              cpf: { type: 'string',
            description: 'The cpf of the user'},
              is_blocked: { type: 'boolean',
            description: 'The user is blocked'},
              block_reason: { type: 'string',
            description: 'The block reason of the user'},
              can_create: { type: 'boolean',
            description: 'The user can create'},
              username: { type: 'string',
            description: 'The username of the user'},
              hash: { type: 'string',
            description: 'The hash of the user'},
              salt: { type: 'string',
            description: 'The salt of the user'},
              status: { type: 'string',
            description: 'The status of the user'},
            },
          },
          Vessel: {
            type: 'object',
            properties: {
              id: { type: 'string',
            description: 'The unique identifier of the vessel' },
              name: { type: 'string',
            description: 'The name of the vessel' },
              company_id: { type: 'string',
            description: 'The unique identifier of the company' },
              onboarded_count: { type: 'integer',
            description: 'The onboarded count of the vessel' },
              areas_id: { type: 'array', items: { type: 'string' },
            description: 'The unique identifier of the areas'},
              status: { type: 'string',
            description: 'The status of the vessel'},
            },
          },
        },
      },
  },
  apis: ['./routes/*.js'],
};


const swaggerDocs = swaggerJsDoc(swaggerOptions);
module.exports = swaggerDocs;
